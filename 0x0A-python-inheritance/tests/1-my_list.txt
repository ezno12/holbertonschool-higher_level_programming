Module: 1-my_list
======================

Import method:
       >>> MyList = __import__("1-my_list").MyList

Check for documentation:
      >>> doc_mod = __import__("1-my_list").__doc__
      >>> print(len(doc_mod) > 0)
      True

      >>> doc_class = __import__("1-my_list").MyList.__doc__
      >>> print(len(doc_class) > 0)
      True

      >>> meth_doc = __import__("1-my_list").MyList.print_sorted.__doc__
      >>> print(len(meth_doc) > 0)
      True

    >>> my_list = MyList()

Correct use:

	# list with positive integers
          >>> my_list.append(5)
     	  >>> my_list.append(3)
    	  >>> my_list.append(6)
    	  >>> my_list.append(78)
    	  >>> my_list.append(4)
    	  >>> my_list.append(33)
    	  >>> my_list.append(4)
    	  >>> my_list.append(6)
    	  >>> my_list.append(6)
    	  >>> my_list.print_sorted()
    	  [3, 4, 4, 5, 6, 6, 6, 33, 78]

	# empty list
	  >>> my_list = MyList()
	  >>> print(my_list)
      	  []

	# initialize with a list
	   >>> my_list = MyList([1, 6, 3])
	   >>> my_list.print_sorted()
	   [1, 3, 6]

	# my_list is of type MyList from the module 1-my_list
  	  >>> type(my_list)
	  <class '1-my_list.MyList'>

	# negative integeres
	>>> my_list = MyList([1, -4, -100, 4, -54])
	>>> my_list.print_sorted()
	[-100, -54, -4, 1, 4]

	# large integers
	>>> my_list = MyList([1000000000000394, -347857587465983798, 0, -1, 1])
	>>> my_list.print_sorted()
	[-347857587465983798, -1, 0, 1, 1000000000000394]

# class instance, my_list inherits from the 'list' object
  	>>> issubclass(type(my_list), list)
    	True

# class MyList inherits from the 'list' object
  	>>> issubclass(MyList, list)
	True

# location of print_sorted method
  	>>> "print_sorted" in dir(MyList)
	True

Expected Errors:

# value can't by any other object besides MyList
  	>>> my_list = [1, 2, 3]
	>>> my_list.print_sorted()
	Traceback (most recent call last):
	...
	AttributeError: 'list' object has no attribute 'print_sorted'

# can't have mixed element types
      # letter
      >>> my_list = MyList()
      >>> my_list.append(4)
      >>> my_list.append(6)
      >>> my_list.append("v")
      >>> my_list.print_sorted()
      Traceback (most recent call last):
      ...
      TypeError: unorderable types: str() < int()
